sequenceDiagram
    actor User
    participant C-Store
    participant API Server
    participant Database

    %% GET cart items
    rect rgb(0, 128, 0, 0.1)
        Note right of User: Successful case - GET cart items
        User->>C-Store: User access to home screen
        activate C-Store
        C-Store->>API Server: Request Method: GET<br>Endpoint: /api/v1/users/:userId/cart-items/<br>Header: { authorization }<br>Payload: {}
        activate API Server
        API Server->>Database: Query "Cart Item" table by "user_id" attribute
        activate Database
        Database-->>API Server: Return cart items
        deactivate Database
        API Server-->>C-Store: [*] Get user's cart items success<br>Response<br>Method: GET<br>Endpoint: /api/v1/users/:userId/cart-items/<br>Status: 200<br>Payload: { cartItems }
        deactivate API Server
        C-Store-->>User: Render cart items to screen
        deactivate C-Store
    end

    %% CREATE cart item - success
    rect rgb(0, 128, 0, 0.1)
        Note right of User: Successful case - CREATE cart item
        User->>C-Store: User access to home screen
        activate C-Store
        C-Store->>API Server: Request Method: POST<br>Endpoint: /api/v1/users/:userId/cart-items/<br>Header: { authorization }<br>Payload: { productId, quantity }
        activate API Server
        API Server->>Database: Query "Cart Item" table by "user_id" & "product_id" attributes
        activate Database
        Database-->>API Server: Cannot found record
        API Server->>Database: Create new cart item with received "productId" & "quantity"
        Database-->>API Server: Return cart item
        deactivate Database
        API Server-->>C-Store: [*] Get user's cart items success<br>Response<br>Method: POST<br>Endpoint: /api/v1/users/:userId/cart-items/<br>Status: 200<br>Payload: { id, productId, quantity }
        deactivate API Server
        C-Store-->>User: Render update to screen
        deactivate C-Store
    end

    %% CREATE cart item - failure
    rect rgb(255, 0, 0, 0.1)
        Note right of User: Failure case 1 - CREATE cart item (duplicate)
        User->>C-Store: User access to home screen
        activate C-Store
        C-Store->>API Server: Request Method: POST<br>Endpoint: /api/v1/users/:userId/cart-items/<br>Header: { authorization }<br>Payload: { productId, quantity }
        activate API Server
        API Server->>Database: Query "Cart Item" table by "user_id" & "product_id" attributes
        activate Database
        Database-->>API Server: Found record
        deactivate Database
        API Server-->>C-Store: [*] User select product already existed<br>Response<br>Method: POST<br>Endpoint: /api/v1/users/:userId/cart-items/<br>Status: 409<br>Payload: { errors }
        deactivate API Server
        C-Store-->>User: Render update to screen
        deactivate C-Store
    end

    %% UPDATE cart item - success
    rect rgb(0, 128, 0, 0.1)
        Note right of User: Successful case - UPDATE cart item
        User->>C-Store: User access to shopping cart screen
        activate C-Store
        C-Store->>API Server: Request Method: PATCH<br>Endpoint: /api/v1/users/:userId/cart-items/:cartItemId/<br>Header: { authorization }<br>Payload: { quantity }
        activate API Server
        
        alt quantity > 0
            API Server->>Database: Update user's cart item with received quantity
            activate Database
            Database-->>API Server: Return cart item
            deactivate Database
            API Server-->>C-Store: [*] Update user's cart item success<br>Response<br>Method: PATCH<br>Endpoint: /api/v1/users/:userId/cart-items/:cartItemId/<br>Status: 200<br>Payload: { id, productId, quantity }
        else quantity = 0
            API Server->>Database: Delete user's cart item with received quantity
            activate Database
            Database-->>API Server: Response success
            deactivate Database
            API Server-->>C-Store: [*] Update user's cart item success<br>Response<br>Method: PATCH<br>Endpoint: /api/v1/users/:userId/cart-items/:cartItemId/<br>Status: 200<br>Payload: {}
        end
        
        deactivate API Server
        C-Store-->>User: Render cart item update to screen
        deactivate C-Store
    end

    %% UPDATE cart item - failure
    rect rgb(255, 0, 0, 0.1)
        Note right of User: Failure case 1 - UPDATE cart item (invalid quantity)
        User->>C-Store: User access to shopping cart screen
        activate C-Store
        C-Store->>API Server: Request Method: PATCH<br>Endpoint: /api/v1/users/:userId/cart-items/:cartItemId/<br>Header: { authorization }<br>Payload: { quantity }
        activate API Server
        API Server-->>C-Store: [*] User send wrong data format (quantity < 0)<br>Response<br>Method: PATCH<br>Endpoint: /api/v1/users/:userId/cart-items/:cartItemId/<br>Status: 400<br>Payload: { errors }
        deactivate API Server
        C-Store-->>User: Render update to screen
        deactivate C-Store
    end

    %% DELETE cart item - success
    rect rgb(0, 128, 0, 0.1)
        Note right of User: Successful case - DELETE cart item
        User->>C-Store: User access to shopping cart screen
        activate C-Store
        C-Store->>API Server: Request Method: DELETE<br>Endpoint: /api/v1/users/:userId/cart-items/:cartItemId/<br>Header: { authorization }<br>Payload: {}
        activate API Server
        API Server->>Database: Delete user's cart item in "Cart Items" table by "id" attribute
        activate Database
        Database-->>API Server: Response success
        deactivate Database
        API Server-->>C-Store: [*] Delete user's cart item success<br>Response<br>Method: DELETE<br>Endpoint: /api/v1/users/:userId/cart-items/:cartItemId/<br>Status: 200<br>Payload: {}
        deactivate API Server
        C-Store-->>User: Remove cart item on screen
        deactivate C-Store
    end

    %% DELETE cart item - failure
    rect rgb(255, 0, 0, 0.1)
        Note right of User: Failure case 1 - DELETE cart item (not found)
        User->>C-Store: User access to shopping cart screen
        activate C-Store
        C-Store->>API Server: Request Method: DELETE<br>Endpoint: /api/v1/users/:userId/cart-items/:cartItemId/<br>Header: { authorization }<br>Payload: {}
        activate API Server
        API Server->>Database: Delete user's cart item in "Cart Items" table by "id" attribute
        activate Database
        Database-->>API Server: Response fail
        deactivate Database
        API Server-->>C-Store: [*] Delete user's cart item fail<br>Response<br>Method: DELETE<br>Endpoint: /api/v1/users/:userId/cart-items/:cartItemId/<br>Status: 404<br>Payload: { errors }
        deactivate API Server
        C-Store-->>User: Render update to screen
        deactivate C-Store
    end
